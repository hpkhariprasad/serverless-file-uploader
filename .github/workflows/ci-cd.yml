name: CI/CD for Lambda File Uploader

on:
  push:
    branches: [ main ]
  pull_request: # run checks on PRs too
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore Dependencies
        run: dotnet restore ./src/LambdaFileUploader

      - name: Build
        run: dotnet build ./src/LambdaFileUploader --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test ./test/LambdaFileUploader.Tests --no-build --verbosity normal

      - name: Package Lambda
        run: dotnet lambda package --project-location ./src/LambdaFileUploader --output-package ./package.zip

  terraform:
    runs-on: ubuntu-latest
    needs: build-test
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1 # adjust if needed

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Optional: require manual approval for prod
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
